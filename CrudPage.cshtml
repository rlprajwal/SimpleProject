
@model CRUDoperationWebApplication.Models.crudModel

@{
    ViewBag.Title = "CrudPage";
}

<h2>CrudPage</h2>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
@*<script src="https//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>*@
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>


@if (ViewBag.message != null)
{
    <script type="text/javascript">

        window.onload = function () {
            if ('@ViewBag.message' == 'Data Deleted Successfully' || '@ViewBag.message' == 'Data not Deleted Successfully') {
                bootbox.alert('@ViewBag.message', function () {
                    window.location.replace("/Crudoperate/ShowAllCrudDetails");
                })
            }
            else if ('@ViewBag.message' == 'Data Inserted Successfully' || '@ViewBag.message' == 'Data not Inserted Successfully') {
                    bootbox.alert('@ViewBag.message', function () {
                        window.location.replace("/Crudoperate/ShowAllCrudDetails");
                    })
            }
            else {
                    bootbox.alert('@ViewBag.message', function () {
                        window.location.replace("/Crudoperate/ShowAllCrudDetails");
                    })
                 }
        }

    </script>
}


@using (Html.BeginForm("CrudPage1", "Crudoperate", FormMethod.Post, new { enctype = "multipart/form-data", id = "FormSubmitId", name = "FormSubmitName" }))
{
    @Html.AntiForgeryToken()
    <div class="row m-t-50 m-b-30">

        <div class="col-md-11 offset-1">


            @if (Model.getcrudDetailslist2 == null)
            {
                <div class="row" style="margin-top:20px;">

                    <div class="col-md-5">

                        <div class="row">
                            <div class="col-md-4 text-center" id="divMS1">
                                @Html.Label("Name")
                            </div>
                            <div class="col-md-8" id="divMS2">
                                <label>@Html.TextBoxFor(Model => Model.Name, new { @class = "form-control", @id = "filename", @required = "required" })</label>
                                @Html.ValidationMessageFor(Model => Model.Name, null, new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>

                <div class="row" style="margin-top:4px;">

                    <div class="col-md-5">

                        <div class="row">
                            <div class="col-md-4 text-center" id="divMS1">
                                @Html.Label("DOB")
                            </div>
                            <div class="col-md-8" id="divMS2">
                                @Html.TextBoxFor(Model => Model.DOB, new { @class = "form-control", @id = "DOB", @type = "date", @required = "required" })
                                @Html.ValidationMessageFor(Model => Model.DOB, null, new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>

                <div class="row" style="margin-top:4px;">

                    <div class="col-md-5">

                        <div class="row">
                            <div class="col-md-4 text-center" id="divMS1" style="text-align:center">
                                @Html.Label("Email")
                            </div>
                            <div class="col-md-8" id="divMS2">
                                <label>@Html.TextBoxFor(Model => Model.EmailID, new { @class = "form-control", @id = "txtemailid", @required = "required" })</label>
                                @Html.ValidationMessageFor(Model => Model.EmailID, null, new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>

                <div class="row" style="margin-top:4px;">

                    <div class="col-md-5">

                        <div class="row">
                            <div class="col-md-4 text-center" id="divMS1" style="text-align:center">
                                @Html.Label("Screenshot Upload")
                            </div>
                            <div class="col-md-8" id="divMS2">
                                @Html.TextBoxFor(a => a.FileAttach, new { @id = "txtfileUpload", @class = "form-control", @tabindex = "5", @title = "File Upload", type = "file", style = "width: 220px;", @required = "required" })
                                @Html.ValidationMessageFor(Model => Model.FileAttach, null, new { @class = "text-danger" })
                                <h6><label>*Please Upload pdf/jpg Format only. </label></h6>
                            </div>
                            <div id="imagePreview"></div>
                        </div>

                    </div>

                </div>

                <div class="row" style="margin-top:5px;">
                    <div class="offset-md-6 col-md-6 text-center">
                        <input type="submit" value="Submit" class="btn btn-success" onclick="finalSubmit();" />
                    </div>
                </div>
            }

        </div>

    </div>

}


<div class="row m-t-50 m-b-30">
    <div class="col-md-11 offset-1">

        @if (Model.getcrudDetailslist2 != null && Model.getcrudDetailslist2.Count > 0)
        {
            <div class="row" style="margin-top:20px;">

                <div class="col-md-5">

                    <div class="row">
                        <div class="col-md-4 text-center" id="divMS1">
                            @Html.Label("ID")
                        </div>
                        <div class="col-md-8" id="divMS2">
                            <label>@Html.TextBoxFor(Model => Model.getcrudDetailslist2[0].CustomerID, new { @class = "form-control", @disabled = "disabled", @id = "userId" })</label>
                            @Html.ValidationMessageFor(Model => Model.getcrudDetailslist2[0].CustomerID, null, new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>

            <div class="row" style="margin-top:20px;">

                <div class="col-md-5">

                    <div class="row">
                        <div class="col-md-4 text-center" id="divMS1">
                            @Html.Label("Name")
                        </div>
                        <div class="col-md-8" id="divMS2">
                            <label>@Html.TextBoxFor(Model => Model.getcrudDetailslist2[0].Name, new { @class = "form-control", @id = "filename1" })</label>
                            @Html.ValidationMessageFor(Model => Model.getcrudDetailslist2[0].Name, null, new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>

            <div class="row" style="margin-top:4px;">

                <div class="col-md-5">

                    <div class="row">
                        <div class="col-md-4 text-center" id="divMS1">
                            @Html.Label("DOB")
                        </div>
                        <div class="col-md-8" id="divMS2">
                            @Html.TextBoxFor(Model => Model.getcrudDetailslist2[0].DOB, new { @class = "form-control", @disabled = "disabled", @id = "DOB1" })
                            @Html.ValidationMessageFor(Model => Model.getcrudDetailslist2[0].DOB, null, new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>

            <div class="row" style="margin-top:4px;">

                <div class="col-md-5">

                    <div class="row">
                        <div class="col-md-4 text-center" id="divMS1" style="text-align:center">
                            @Html.Label("Email")
                        </div>
                        <div class="col-md-8" id="divMS2">
                            <label>@Html.TextBoxFor(Model => Model.getcrudDetailslist2[0].EmailID, new { @class = "form-control", @id = "txtemailid1" })</label>
                            @Html.ValidationMessageFor(Model => Model.getcrudDetailslist2[0].EmailID, null, new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>

            <div class="row" style="margin-top:4px;">

                <div class="col-md-5">

                    <div class="row">
                        <div class="col-md-4 text-center" id="divMS1" style="text-align:center">
                            @Html.Label("Screenshot Upload")
                        </div>
                        @if (Model.getcrudDetailslist2[0].FilePath != null)
                        {
                            <img width="30" height="40" style="border:2px solid black;" id="filepath" src="@Url.Action("GetImage", "Crudoperate", new { Id = Model.getcrudDetailslist2[0].CustomerID, Path = Model.getcrudDetailslist2[0].FilePath })" />
                            @Html.TextBoxFor(Model => Model.getcrudDetailslist2[0].Filename, new { @id = "txtfilename", @class = "form-control", @disabled = "disabled", style = "width: 100px;" })

                        }
                        <div class="col-md-8" id="divMS2">
                            @Html.TextBoxFor(a => a.FileAttach, new { @id = "txtfileUpload1", @class = "form-control", @tabindex = "5", @title = "File Upload", type = "file", style = "width: 220px;" })
                            @Html.ValidationMessageFor(Model => Model.FileAttach, null, new { @class = "text-danger" })
                            <h6><label>*Please Upload png/jpg Format only. </label></h6>
                        </div>
                        <div id="imagePreview1"></div>
                    </div>

                </div>

            </div>

            <div class="row" style="margin-top:5px;">
                <div class="offset-md-6 col-md-6 text-center">
                    <input type="button" class="btn btn-success" id="submitBtn' + @Model.getcrudDetailslist2[0].FilePath + '" value="Update" onclick="javascript: return SaveEdit(this);" />
                </div>
            </div>

        }

    </div>
</div>

<br />
<br />
<br />

@if (Model != null)
{
    if (Model.getcrudDetailslist != null)
    {
        if (Model.getcrudDetailslist.Count > 0)
        {

            <div class="hoverpop mt-5">

                <div class="table-responsive aspitable-information ml-1 mt-5">

                    <table cellspacing="10" cellpadding="5" id="aspitableinfo" style="Text-align: center;">


                        <thead class="thead-dark" style="background-color: none !important;">
                            <tr>
                                <th class="lblforEn" colspan="6" style="color: black; background-color: none !important; text-align: center;"><span class="lblforEn">CRUD Operation User Details</span></th>
                            </tr>
                        </thead>

                        <thead class="thead-dark mt-5">

                            <tr style="text-align: left;">
                                <th scope="col" style=" border: 1px solid grey; text-align:center; width:300px;"><span class="lblforEn">User ID</span></th>
                                <th scope="col" style=" border: 1px solid grey; text-align:center; width:300px;"><span class="lblforEn">Name</span></th>
                                <th scope="col" style=" border: 1px solid grey; text-align:center; width:300px;"><span class="lblforEn">Date Of Birth</span></th>
                                <th scope="col" style=" border: 1px solid grey; text-align:center; width:300px;"><span class="lblforEn">Email</span></th>
                                <th scope="col" style=" border: 1px solid grey; text-align:center; width:300px;"><span class="lblforEn">Photo/Screenshot</span></th>
                                <th scope="col" style=" border: 1px solid grey; text-align:center; width:600px;"><span class="lblforEn">Operations</span></th>
                            </tr>

                        </thead>


                        @foreach (var items in Model.getcrudDetailslist)
                        {
                            <tr>
                                <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.CustomerID)</td>
                                <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.Name)</td>
                                <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.Birthdate)</td>
                                <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.EmailID)</td>
                                <td style="align-content: center; border: 1px solid grey;">
                                    <img width="30" height="40" src="@Url.Action("GetImage", "Crudoperate", new { Id = items.CustomerID, Path = items.FilePath })" />
                                </td>
                                <td style="border: 1px solid grey">
                                    <input type="button" value="Display" id="btnConfirm1" class="btn btn-success" title="Click to Display" onclick="location.href='@Url.Action("CrudColumnDetails", "Crudoperate", new { Id = items.CustomerID })'" /> |
                                    <input type="button" value="Modify" id="btnConfirm2" class="btn btn-success" title="Click to Modify" onclick="location.href='@Url.Action("ModifyCrudDetails", "Crudoperate", new { Id = items.CustomerID })'" /> |
                                    <input type="button" value="Delete" id="btnConfirm3" class="btn btn-success" title="Click to Delete" onclick="Unconfirm('@items.CustomerID');" />
                                </td>
                            </tr>
                        }

                    </table>

                </div>
            </div>
        }
    }


}

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            @if (Model.getcrudDetailslist1 != null)
            {
                if (Model.getcrudDetailslist1.Count > 0)
                {
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">×</button>
                        <h4 class="modal-title" id="myModalLabel">Crud Data Details</h4>
                    </div>
                    <div class="modal-body mt-5">
                        <table cellspacing="10" cellpadding="5" id="aspitableinfo" style="Text-align: center;">
                            <thead class="thead-dark">

                                <tr style="text-align: left;">
                                    <th scope="col" style=" border: 1px solid grey; text-align: center; width: 300px;"><span class="lblforEn">User ID</span></th>
                                    <th scope="col" style=" border: 1px solid grey; text-align: center; width: 300px;"><span class="lblforEn">Name</span></th>
                                    <th scope="col" style=" border: 1px solid grey; text-align: center; width: 300px;"><span class="lblforEn">Date Of Birth</span></th>
                                    <th scope="col" style=" border: 1px solid grey; text-align: center; width: 300px;"><span class="lblforEn">Email</span></th>
                                    <th scope="col" style=" border: 1px solid grey; text-align: center; width: 300px;"><span class="lblforEn">Photo/Screenshot</span></th>
                                </tr>

                                @foreach (var items in Model.getcrudDetailslist1)
                                {
                                    <tr>
                                        <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.CustomerID)</td>
                                        <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.Name)</td>
                                        <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.Birthdate)</td>
                                        <td style="text-align: center; border: 1px solid grey;">@Html.DisplayFor(modelItem => items.EmailID)</td>
                                        <td style="align-content: center; border: 1px solid grey;">
                                            <img width="30" height="40" src="@Url.Action("GetImage", "Crudoperate", new { Id = items.CustomerID, Path = items.FilePath })" />
                                        </td>
                                    </tr>
                                }

                            </thead>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }
            }

        </div>
    </div>
</div>



<script type="text/javascript">

    function finalSubmit() {
        debugger;

        var message = "";
        var Name = $("#filename").val();
        var dateString = $("#DOB").val();
        var Emailid = $("#txtemailid").val();

        if ($("#filename").val() == "") {

            message = "Please Enter your name";
            bootbox.alert(message, function () {
                window.location.href = window.location.href;
            })

            return false;
        }
        else if ($("#filename").val() != "") {

            if ($("#filename").val().length > 4) {
                var regName = /^[A-Za-z\s]+$/;

                if (!regName.test(Name)) {

                    message = "Please Enter correct name";
                    bootbox.alert(message, function () {
                        window.location.href = window.location.href;
                    })

                    document.getElementById('filename').focus();
                    return false;
                }
            }
            else if ($("#filename").val().length < 4) {

                message = "Please Enter your full name";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })

                return false;
            }
        }

        if ($("#DOB").val() == "") {

            message = "Please Enter your DOB";
            bootbox.alert(message, function () {
                window.location.href = window.location.href;
            })
            return false;
        }
        else if ($("#DOB").val() != "") {

            var regex1 = /^([0-9]{4})\-([0-9]{2})\-([0-9]{2})$/;

            if (regex1.test(dateString)) {
                var parts = dateString.split("-");
                var dtDOB = new Date(parts[0] + "-" + parts[1] + "-" + parts[2]);
                var dtCurrent = new Date();

                if (dtCurrent.getFullYear() - dtDOB.getFullYear() < 18) {

                    message = "Eligibility 18 years ONLY";
                    bootbox.alert(message, function () {
                        window.location.href = window.location.href;
                    })
                    return false;
                }
                else if (dtCurrent.getFullYear() - dtDOB.getFullYear() == 18) {

                    if (dtCurrent.getMonth() < dtDOB.getMonth()) {

                        message = "Eligibility 18+ years ONLY";
                        bootbox.alert(message, function () {
                            window.location.href = window.location.href;
                        })
                        return false;
                    }
                    else if (dtCurrent.getMonth() == dtDOB.getMonth()) {

                        if (dtCurrent.getDate() < dtDOB.getDate()) {

                            message = "Eligibility 18+ years ONLY";
                            bootbox.alert(message, function () {
                                window.location.href = window.location.href;
                            })
                            return false;
                        }
                    }
                }
            }
            else {

                message = "Enter date in dd/MM/yyyy format ONLY";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
        }


        if ($("#txtemailid").val() == "") {

            message = "Please Enter your Email Address";
            bootbox.alert(message, function () {
                window.location.href = window.location.href;
            })
            return false;
        }
        else if ($("#txtemailid").val() != "") {

            var validRegex = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

            if (!validRegex.test(Emailid)) {

                message = "Invalid Email Address";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
        }


        var totalFiles = document.getElementById("txtfileUpload").files.length;
        var totalfiles1 = document.getElementById('txtfileUpload');
        var filePath = totalfiles1.value;
        var file = $("#txtfileUpload")[0];

        if (totalFiles == "" || filePath == "" || file == "") {

            message = "Image file is not Uploaded correctly";
            bootbox.alert(message, function () {
                window.location.href = window.location.href;
            })
            return false;
        }
        else if (totalFiles != "" || filePath != "" || file != "") {

            var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;

            if (allowedExtensions.exec(filePath) || allowedExtensions.exec(file)) {

                if (totalfiles1.files && totalfiles1.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById(
                            'imagePreview').innerHTML =
                            '<img src="' + e.target.result
                            + '"/>';
                    };

                    reader.readAsDataURL(totalfiles1.files[0]);
                }
            }
            else if (!allowedExtensions.exec(filePath) || !allowedExtensions.exec(file)) {
                alert('Invalid file Upload');
                totalfiles1.value = '';
                file = '';

                message = "Invalid file Upload";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
        }


        if (message != "") {

            message = "Please upload your correct details";
            bootbox.alert(message, function () {
                window.location.href = window.location.href;
            })
            return false;
        }
        else if (message == "") {
            $("#FormSubmitId").submit();
        }
    }

</script>

<script type="text/javascript">

        function SaveEdit(Filepath) {
            debugger;

            var message = "";
            var CustomerId = $("#userId").val();
            var Name = $("#filename1").val();
            var dateString = $("#DOB1").val();
            var Emailid = $("#txtemailid1").val();
            var Filename = $("#txtfilename").val();
            var file = $("#txtfileUpload1").get(0).files;
            var Id = $(Filepath).attr('id').split("submitBtn");
            var FilePath = Id[1];            

            if ($("#filename1").val() == "") {

                message = "Please Enter your name";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
            else if ($("#filename1").val() != "") {

                if ($("#filename1").val().length > 4) {
                    var regName = /^[A-Za-z\s]+$/;

                    if (!regName.test(Name)) {

                        message = "Please Enter correct name";
                        bootbox.alert(message, function () {
                            window.location.href = window.location.href;
                        })
                        document.getElementById('filename1').focus();
                        return false;
                    }
                }
                else if ($("#filename1").val().length < 4) {

                    message = "Please Enter your full name";
                    bootbox.alert(message, function () {
                        window.location.href = window.location.href;
                    })
                    return false;
                }
            }


            if ($("#DOB1").val() == "") {

                message = "Please Enter your DOB";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
            else if ($("#DOB1").val() != "") {

                var regex1 = /^([0-9]{2})\-([0-9]{2})\-([0-9]{4})$/;

                if (!regex1.test(dateString)) {
                    alert("Incoming");
                    message = "Enter date in dd/MM/yyyy format ONLY";
                    bootbox.alert(message, function () {
                        window.location.href = window.location.href;
                    })
                    return false;
                }
            }


            if ($("#txtemailid1").val() == "") {

                message = "Please Enter your Email Address";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
            else if ($("#txtemailid1").val() != "") {

                var validRegex = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

                if (!validRegex.test(Emailid)) {

                    message = "Invalid Email Address";
                    bootbox.alert(message, function () {
                        window.location.href = window.location.href;
                    })
                    return false;
                }
            }


            var totalFiles = document.getElementById("txtfileUpload1").files.length;
            var filePath = document.getElementById('txtfileUpload1').value;
            var file = $("#txtfileUpload1").get(0).files;

            if (totalFiles == "" || filePath == "" || file.length == 0) {

                message = "Image file is not Uploaded correctly";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
            else if (totalFiles != "" || filePath != "" || file.length > 0) {

                var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
                if (allowedExtensions.exec(filePath) || allowedExtensions.exec(file)) {

                   var reader = new FileReader();
                   reader.onload = function (e) {
                       document.getElementById('imagePreview').innerHTML = '<img src="' + e.target.result + '"/>';
                   };
                   reader.readAsDataURL(file[0]);
                }
                else if (!allowedExtensions.exec(filePath) || !allowedExtensions.exec(file)) {

                    //totalfiles1.value = '';
                    //file = '';
                    message = "Invalid file Upload";
                    bootbox.alert(message, function () {
                        window.location.href = window.location.href;
                    })
                    return false;
                }
            }

            if (message != "") {

                message = "Please upload your correct details";
                bootbox.alert(message, function () {
                    window.location.href = window.location.href;
                })
                return false;
            }
            else {
                SaveEdit2(FilePath);
            }
        }


        function SaveEdit2(FilePath) {
            debugger;

            bootbox.confirm({
                message: "Are you sure you want to Edit?",
                buttons: {
                    confirm: {
                        label: 'No',
                        className: 'btn btn-danger'
                    },
                    cancel: {
                        label: 'Yes',
                        className: 'btn btn-success'
                    }
                },
                callback: function (confirmed) {
                    if (!confirmed) {
                        return SaveEdit3(FilePath);
                    }
                }
            });
        }

</script>


<script>

    function SaveEdit3(FilePath) {
        debugger;

        var CustomerId = $("#userId").val();
        var Name = $("#filename1").val();
        var dateString = $("#DOB1").val();
        var Emailid = $("#txtemailid1").val();
        var file = $("#txtfileUpload1").get(0).files;
        var Filename = $("#txtfilename").val();

        var modelDetails = new FormData();
        modelDetails.append("CustomerID", CustomerId);
        modelDetails.append("Name", Name);
        modelDetails.append("Birthdate", dateString);
        modelDetails.append("EmailID", Emailid);
        modelDetails.append("FileAttach", file[0]);
        modelDetails.append("Filename", Filename);
        modelDetails.append("FilePath", FilePath);

        $.ajax({
            contentType: false,
            type: 'POST',
            url: '/Crudoperate/SaveEditChanges',
            data: modelDetails,
            processData: false,          
            success: function (result) {

                 if (result != null) {

                     if (result == "Data Updated Successfully" || result == "Data not Updated Successfully") {
                         bootbox.alert(result, function () {
                             window.location.href = window.location.href;
                             @*location.href = @Url.Action("Crudoperate", "ShowAllCrudDetails");*@
                         })

                     }
                     else if (result != "Data Updated Successfully" || result == "Data not Updated Successfully") {
                         bootbox.alert(result, function () {
                             window.location.href = window.location.href;
                             @*location.href = @Url.Action("Crudoperate", "CrudPage");*@
                         })
                     }
                 }
             },
             error: function () {
                 alert('Error Occured');
             }

        });

    }

</script>

<script type="text/javascript">
    function Unconfirm(CustomerID) {
        debugger;

        var custId = CustomerID;
        alert("custId : " + custId);
        var Txt = "Are You Sure to Delete";
        bootbox.confirm({
            message: Txt, buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn btn-danger'
                }
            },
            callback: function (confirmed) {
                if (confirmed) {
                    debugger;
                    window.location.replace("/Crudoperate/DeleteUserDetails?UserId=" + CustomerID);
                }
            }
        });
    }
</script>


@if (ViewBag.count != null)
{
    <script type="text/javascript">
        window.onload = function () {
            $('#myModal').modal('toggle');
        }
    </script>
}

